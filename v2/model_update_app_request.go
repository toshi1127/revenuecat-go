/*
Developer API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the UpdateAppRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateAppRequest{}

// UpdateAppRequest struct for UpdateAppRequest
type UpdateAppRequest struct {
	// The name of the app
	Name *string `json:"name,omitempty"`
	Amazon *UpdateAppRequestAmazon `json:"amazon,omitempty"`
	AppStore *UpdateAppRequestAppStore `json:"app_store,omitempty"`
	MacAppStore *UpdateAppRequestMacAppStore `json:"mac_app_store,omitempty"`
	PlayStore *UpdateAppRequestPlayStore `json:"play_store,omitempty"`
	Stripe *UpdateAppRequestStripe `json:"stripe,omitempty"`
	RcBilling *UpdateAppRequestRcBilling `json:"rc_billing,omitempty"`
	Roku *UpdateAppRequestRoku `json:"roku,omitempty"`
	Paddle *UpdateAppRequestPaddle `json:"paddle,omitempty"`
}

// NewUpdateAppRequest instantiates a new UpdateAppRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateAppRequest() *UpdateAppRequest {
	this := UpdateAppRequest{}
	return &this
}

// NewUpdateAppRequestWithDefaults instantiates a new UpdateAppRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateAppRequestWithDefaults() *UpdateAppRequest {
	this := UpdateAppRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateAppRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAppRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateAppRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateAppRequest) SetName(v string) {
	o.Name = &v
}

// GetAmazon returns the Amazon field value if set, zero value otherwise.
func (o *UpdateAppRequest) GetAmazon() UpdateAppRequestAmazon {
	if o == nil || IsNil(o.Amazon) {
		var ret UpdateAppRequestAmazon
		return ret
	}
	return *o.Amazon
}

// GetAmazonOk returns a tuple with the Amazon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAppRequest) GetAmazonOk() (*UpdateAppRequestAmazon, bool) {
	if o == nil || IsNil(o.Amazon) {
		return nil, false
	}
	return o.Amazon, true
}

// HasAmazon returns a boolean if a field has been set.
func (o *UpdateAppRequest) HasAmazon() bool {
	if o != nil && !IsNil(o.Amazon) {
		return true
	}

	return false
}

// SetAmazon gets a reference to the given UpdateAppRequestAmazon and assigns it to the Amazon field.
func (o *UpdateAppRequest) SetAmazon(v UpdateAppRequestAmazon) {
	o.Amazon = &v
}

// GetAppStore returns the AppStore field value if set, zero value otherwise.
func (o *UpdateAppRequest) GetAppStore() UpdateAppRequestAppStore {
	if o == nil || IsNil(o.AppStore) {
		var ret UpdateAppRequestAppStore
		return ret
	}
	return *o.AppStore
}

// GetAppStoreOk returns a tuple with the AppStore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAppRequest) GetAppStoreOk() (*UpdateAppRequestAppStore, bool) {
	if o == nil || IsNil(o.AppStore) {
		return nil, false
	}
	return o.AppStore, true
}

// HasAppStore returns a boolean if a field has been set.
func (o *UpdateAppRequest) HasAppStore() bool {
	if o != nil && !IsNil(o.AppStore) {
		return true
	}

	return false
}

// SetAppStore gets a reference to the given UpdateAppRequestAppStore and assigns it to the AppStore field.
func (o *UpdateAppRequest) SetAppStore(v UpdateAppRequestAppStore) {
	o.AppStore = &v
}

// GetMacAppStore returns the MacAppStore field value if set, zero value otherwise.
func (o *UpdateAppRequest) GetMacAppStore() UpdateAppRequestMacAppStore {
	if o == nil || IsNil(o.MacAppStore) {
		var ret UpdateAppRequestMacAppStore
		return ret
	}
	return *o.MacAppStore
}

// GetMacAppStoreOk returns a tuple with the MacAppStore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAppRequest) GetMacAppStoreOk() (*UpdateAppRequestMacAppStore, bool) {
	if o == nil || IsNil(o.MacAppStore) {
		return nil, false
	}
	return o.MacAppStore, true
}

// HasMacAppStore returns a boolean if a field has been set.
func (o *UpdateAppRequest) HasMacAppStore() bool {
	if o != nil && !IsNil(o.MacAppStore) {
		return true
	}

	return false
}

// SetMacAppStore gets a reference to the given UpdateAppRequestMacAppStore and assigns it to the MacAppStore field.
func (o *UpdateAppRequest) SetMacAppStore(v UpdateAppRequestMacAppStore) {
	o.MacAppStore = &v
}

// GetPlayStore returns the PlayStore field value if set, zero value otherwise.
func (o *UpdateAppRequest) GetPlayStore() UpdateAppRequestPlayStore {
	if o == nil || IsNil(o.PlayStore) {
		var ret UpdateAppRequestPlayStore
		return ret
	}
	return *o.PlayStore
}

// GetPlayStoreOk returns a tuple with the PlayStore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAppRequest) GetPlayStoreOk() (*UpdateAppRequestPlayStore, bool) {
	if o == nil || IsNil(o.PlayStore) {
		return nil, false
	}
	return o.PlayStore, true
}

// HasPlayStore returns a boolean if a field has been set.
func (o *UpdateAppRequest) HasPlayStore() bool {
	if o != nil && !IsNil(o.PlayStore) {
		return true
	}

	return false
}

// SetPlayStore gets a reference to the given UpdateAppRequestPlayStore and assigns it to the PlayStore field.
func (o *UpdateAppRequest) SetPlayStore(v UpdateAppRequestPlayStore) {
	o.PlayStore = &v
}

// GetStripe returns the Stripe field value if set, zero value otherwise.
func (o *UpdateAppRequest) GetStripe() UpdateAppRequestStripe {
	if o == nil || IsNil(o.Stripe) {
		var ret UpdateAppRequestStripe
		return ret
	}
	return *o.Stripe
}

// GetStripeOk returns a tuple with the Stripe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAppRequest) GetStripeOk() (*UpdateAppRequestStripe, bool) {
	if o == nil || IsNil(o.Stripe) {
		return nil, false
	}
	return o.Stripe, true
}

// HasStripe returns a boolean if a field has been set.
func (o *UpdateAppRequest) HasStripe() bool {
	if o != nil && !IsNil(o.Stripe) {
		return true
	}

	return false
}

// SetStripe gets a reference to the given UpdateAppRequestStripe and assigns it to the Stripe field.
func (o *UpdateAppRequest) SetStripe(v UpdateAppRequestStripe) {
	o.Stripe = &v
}

// GetRcBilling returns the RcBilling field value if set, zero value otherwise.
func (o *UpdateAppRequest) GetRcBilling() UpdateAppRequestRcBilling {
	if o == nil || IsNil(o.RcBilling) {
		var ret UpdateAppRequestRcBilling
		return ret
	}
	return *o.RcBilling
}

// GetRcBillingOk returns a tuple with the RcBilling field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAppRequest) GetRcBillingOk() (*UpdateAppRequestRcBilling, bool) {
	if o == nil || IsNil(o.RcBilling) {
		return nil, false
	}
	return o.RcBilling, true
}

// HasRcBilling returns a boolean if a field has been set.
func (o *UpdateAppRequest) HasRcBilling() bool {
	if o != nil && !IsNil(o.RcBilling) {
		return true
	}

	return false
}

// SetRcBilling gets a reference to the given UpdateAppRequestRcBilling and assigns it to the RcBilling field.
func (o *UpdateAppRequest) SetRcBilling(v UpdateAppRequestRcBilling) {
	o.RcBilling = &v
}

// GetRoku returns the Roku field value if set, zero value otherwise.
func (o *UpdateAppRequest) GetRoku() UpdateAppRequestRoku {
	if o == nil || IsNil(o.Roku) {
		var ret UpdateAppRequestRoku
		return ret
	}
	return *o.Roku
}

// GetRokuOk returns a tuple with the Roku field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAppRequest) GetRokuOk() (*UpdateAppRequestRoku, bool) {
	if o == nil || IsNil(o.Roku) {
		return nil, false
	}
	return o.Roku, true
}

// HasRoku returns a boolean if a field has been set.
func (o *UpdateAppRequest) HasRoku() bool {
	if o != nil && !IsNil(o.Roku) {
		return true
	}

	return false
}

// SetRoku gets a reference to the given UpdateAppRequestRoku and assigns it to the Roku field.
func (o *UpdateAppRequest) SetRoku(v UpdateAppRequestRoku) {
	o.Roku = &v
}

// GetPaddle returns the Paddle field value if set, zero value otherwise.
func (o *UpdateAppRequest) GetPaddle() UpdateAppRequestPaddle {
	if o == nil || IsNil(o.Paddle) {
		var ret UpdateAppRequestPaddle
		return ret
	}
	return *o.Paddle
}

// GetPaddleOk returns a tuple with the Paddle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAppRequest) GetPaddleOk() (*UpdateAppRequestPaddle, bool) {
	if o == nil || IsNil(o.Paddle) {
		return nil, false
	}
	return o.Paddle, true
}

// HasPaddle returns a boolean if a field has been set.
func (o *UpdateAppRequest) HasPaddle() bool {
	if o != nil && !IsNil(o.Paddle) {
		return true
	}

	return false
}

// SetPaddle gets a reference to the given UpdateAppRequestPaddle and assigns it to the Paddle field.
func (o *UpdateAppRequest) SetPaddle(v UpdateAppRequestPaddle) {
	o.Paddle = &v
}

func (o UpdateAppRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateAppRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Amazon) {
		toSerialize["amazon"] = o.Amazon
	}
	if !IsNil(o.AppStore) {
		toSerialize["app_store"] = o.AppStore
	}
	if !IsNil(o.MacAppStore) {
		toSerialize["mac_app_store"] = o.MacAppStore
	}
	if !IsNil(o.PlayStore) {
		toSerialize["play_store"] = o.PlayStore
	}
	if !IsNil(o.Stripe) {
		toSerialize["stripe"] = o.Stripe
	}
	if !IsNil(o.RcBilling) {
		toSerialize["rc_billing"] = o.RcBilling
	}
	if !IsNil(o.Roku) {
		toSerialize["roku"] = o.Roku
	}
	if !IsNil(o.Paddle) {
		toSerialize["paddle"] = o.Paddle
	}
	return toSerialize, nil
}

type NullableUpdateAppRequest struct {
	value *UpdateAppRequest
	isSet bool
}

func (v NullableUpdateAppRequest) Get() *UpdateAppRequest {
	return v.value
}

func (v *NullableUpdateAppRequest) Set(val *UpdateAppRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateAppRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateAppRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateAppRequest(val *UpdateAppRequest) *NullableUpdateAppRequest {
	return &NullableUpdateAppRequest{value: val, isSet: true}
}

func (v NullableUpdateAppRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateAppRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


