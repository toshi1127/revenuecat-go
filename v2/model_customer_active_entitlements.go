/*
Developer API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CustomerActiveEntitlements type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomerActiveEntitlements{}

// CustomerActiveEntitlements struct for CustomerActiveEntitlements
type CustomerActiveEntitlements struct {
	// String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
	Object string `json:"object"`
	// Details about each object.
	Items []CustomerEntitlement `json:"items"`
	// URL to access the next page of the customer's active entitlements. If not present / null, there is no next page
	NextPage NullableString `json:"next_page"`
	// The URL where this list can be accessed.
	Url string `json:"url"`
}

type _CustomerActiveEntitlements CustomerActiveEntitlements

// NewCustomerActiveEntitlements instantiates a new CustomerActiveEntitlements object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomerActiveEntitlements(object string, items []CustomerEntitlement, nextPage NullableString, url string) *CustomerActiveEntitlements {
	this := CustomerActiveEntitlements{}
	this.Object = object
	this.Items = items
	this.NextPage = nextPage
	this.Url = url
	return &this
}

// NewCustomerActiveEntitlementsWithDefaults instantiates a new CustomerActiveEntitlements object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerActiveEntitlementsWithDefaults() *CustomerActiveEntitlements {
	this := CustomerActiveEntitlements{}
	return &this
}

// GetObject returns the Object field value
func (o *CustomerActiveEntitlements) GetObject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Object
}

// GetObjectOk returns a tuple with the Object field value
// and a boolean to check if the value has been set.
func (o *CustomerActiveEntitlements) GetObjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Object, true
}

// SetObject sets field value
func (o *CustomerActiveEntitlements) SetObject(v string) {
	o.Object = v
}

// GetItems returns the Items field value
func (o *CustomerActiveEntitlements) GetItems() []CustomerEntitlement {
	if o == nil {
		var ret []CustomerEntitlement
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *CustomerActiveEntitlements) GetItemsOk() ([]CustomerEntitlement, bool) {
	if o == nil {
		return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *CustomerActiveEntitlements) SetItems(v []CustomerEntitlement) {
	o.Items = v
}

// GetNextPage returns the NextPage field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CustomerActiveEntitlements) GetNextPage() string {
	if o == nil || o.NextPage.Get() == nil {
		var ret string
		return ret
	}

	return *o.NextPage.Get()
}

// GetNextPageOk returns a tuple with the NextPage field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomerActiveEntitlements) GetNextPageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NextPage.Get(), o.NextPage.IsSet()
}

// SetNextPage sets field value
func (o *CustomerActiveEntitlements) SetNextPage(v string) {
	o.NextPage.Set(&v)
}

// GetUrl returns the Url field value
func (o *CustomerActiveEntitlements) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *CustomerActiveEntitlements) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *CustomerActiveEntitlements) SetUrl(v string) {
	o.Url = v
}

func (o CustomerActiveEntitlements) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomerActiveEntitlements) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["object"] = o.Object
	toSerialize["items"] = o.Items
	toSerialize["next_page"] = o.NextPage.Get()
	toSerialize["url"] = o.Url
	return toSerialize, nil
}

func (o *CustomerActiveEntitlements) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"object",
		"items",
		"next_page",
		"url",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCustomerActiveEntitlements := _CustomerActiveEntitlements{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCustomerActiveEntitlements)

	if err != nil {
		return err
	}

	*o = CustomerActiveEntitlements(varCustomerActiveEntitlements)

	return err
}

type NullableCustomerActiveEntitlements struct {
	value *CustomerActiveEntitlements
	isSet bool
}

func (v NullableCustomerActiveEntitlements) Get() *CustomerActiveEntitlements {
	return v.value
}

func (v *NullableCustomerActiveEntitlements) Set(val *CustomerActiveEntitlements) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerActiveEntitlements) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerActiveEntitlements) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerActiveEntitlements(val *CustomerActiveEntitlements) *NullableCustomerActiveEntitlements {
	return &NullableCustomerActiveEntitlements{value: val, isSet: true}
}

func (v NullableCustomerActiveEntitlements) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerActiveEntitlements) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


