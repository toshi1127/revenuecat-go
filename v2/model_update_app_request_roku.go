/*
Developer API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the UpdateAppRequestRoku type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateAppRequestRoku{}

// UpdateAppRequestRoku Roku Channel Store type details. Should only be used when type is roku.
type UpdateAppRequestRoku struct {
	// Roku Pay API key provided on the Roku Pay Web Services page.
	RokuApiKey NullableString `json:"roku_api_key,omitempty"`
	// Channel ID provided on the Roku Channel page.
	RokuChannelId NullableString `json:"roku_channel_id,omitempty"`
	// Channel name that is displayed on the Roku Channel page.
	RokuChannelName NullableString `json:"roku_channel_name,omitempty"`
}

// NewUpdateAppRequestRoku instantiates a new UpdateAppRequestRoku object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateAppRequestRoku() *UpdateAppRequestRoku {
	this := UpdateAppRequestRoku{}
	return &this
}

// NewUpdateAppRequestRokuWithDefaults instantiates a new UpdateAppRequestRoku object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateAppRequestRokuWithDefaults() *UpdateAppRequestRoku {
	this := UpdateAppRequestRoku{}
	return &this
}

// GetRokuApiKey returns the RokuApiKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateAppRequestRoku) GetRokuApiKey() string {
	if o == nil || IsNil(o.RokuApiKey.Get()) {
		var ret string
		return ret
	}
	return *o.RokuApiKey.Get()
}

// GetRokuApiKeyOk returns a tuple with the RokuApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateAppRequestRoku) GetRokuApiKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RokuApiKey.Get(), o.RokuApiKey.IsSet()
}

// HasRokuApiKey returns a boolean if a field has been set.
func (o *UpdateAppRequestRoku) HasRokuApiKey() bool {
	if o != nil && o.RokuApiKey.IsSet() {
		return true
	}

	return false
}

// SetRokuApiKey gets a reference to the given NullableString and assigns it to the RokuApiKey field.
func (o *UpdateAppRequestRoku) SetRokuApiKey(v string) {
	o.RokuApiKey.Set(&v)
}
// SetRokuApiKeyNil sets the value for RokuApiKey to be an explicit nil
func (o *UpdateAppRequestRoku) SetRokuApiKeyNil() {
	o.RokuApiKey.Set(nil)
}

// UnsetRokuApiKey ensures that no value is present for RokuApiKey, not even an explicit nil
func (o *UpdateAppRequestRoku) UnsetRokuApiKey() {
	o.RokuApiKey.Unset()
}

// GetRokuChannelId returns the RokuChannelId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateAppRequestRoku) GetRokuChannelId() string {
	if o == nil || IsNil(o.RokuChannelId.Get()) {
		var ret string
		return ret
	}
	return *o.RokuChannelId.Get()
}

// GetRokuChannelIdOk returns a tuple with the RokuChannelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateAppRequestRoku) GetRokuChannelIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RokuChannelId.Get(), o.RokuChannelId.IsSet()
}

// HasRokuChannelId returns a boolean if a field has been set.
func (o *UpdateAppRequestRoku) HasRokuChannelId() bool {
	if o != nil && o.RokuChannelId.IsSet() {
		return true
	}

	return false
}

// SetRokuChannelId gets a reference to the given NullableString and assigns it to the RokuChannelId field.
func (o *UpdateAppRequestRoku) SetRokuChannelId(v string) {
	o.RokuChannelId.Set(&v)
}
// SetRokuChannelIdNil sets the value for RokuChannelId to be an explicit nil
func (o *UpdateAppRequestRoku) SetRokuChannelIdNil() {
	o.RokuChannelId.Set(nil)
}

// UnsetRokuChannelId ensures that no value is present for RokuChannelId, not even an explicit nil
func (o *UpdateAppRequestRoku) UnsetRokuChannelId() {
	o.RokuChannelId.Unset()
}

// GetRokuChannelName returns the RokuChannelName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateAppRequestRoku) GetRokuChannelName() string {
	if o == nil || IsNil(o.RokuChannelName.Get()) {
		var ret string
		return ret
	}
	return *o.RokuChannelName.Get()
}

// GetRokuChannelNameOk returns a tuple with the RokuChannelName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateAppRequestRoku) GetRokuChannelNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RokuChannelName.Get(), o.RokuChannelName.IsSet()
}

// HasRokuChannelName returns a boolean if a field has been set.
func (o *UpdateAppRequestRoku) HasRokuChannelName() bool {
	if o != nil && o.RokuChannelName.IsSet() {
		return true
	}

	return false
}

// SetRokuChannelName gets a reference to the given NullableString and assigns it to the RokuChannelName field.
func (o *UpdateAppRequestRoku) SetRokuChannelName(v string) {
	o.RokuChannelName.Set(&v)
}
// SetRokuChannelNameNil sets the value for RokuChannelName to be an explicit nil
func (o *UpdateAppRequestRoku) SetRokuChannelNameNil() {
	o.RokuChannelName.Set(nil)
}

// UnsetRokuChannelName ensures that no value is present for RokuChannelName, not even an explicit nil
func (o *UpdateAppRequestRoku) UnsetRokuChannelName() {
	o.RokuChannelName.Unset()
}

func (o UpdateAppRequestRoku) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateAppRequestRoku) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.RokuApiKey.IsSet() {
		toSerialize["roku_api_key"] = o.RokuApiKey.Get()
	}
	if o.RokuChannelId.IsSet() {
		toSerialize["roku_channel_id"] = o.RokuChannelId.Get()
	}
	if o.RokuChannelName.IsSet() {
		toSerialize["roku_channel_name"] = o.RokuChannelName.Get()
	}
	return toSerialize, nil
}

type NullableUpdateAppRequestRoku struct {
	value *UpdateAppRequestRoku
	isSet bool
}

func (v NullableUpdateAppRequestRoku) Get() *UpdateAppRequestRoku {
	return v.value
}

func (v *NullableUpdateAppRequestRoku) Set(val *UpdateAppRequestRoku) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateAppRequestRoku) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateAppRequestRoku) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateAppRequestRoku(val *UpdateAppRequestRoku) *NullableUpdateAppRequestRoku {
	return &NullableUpdateAppRequestRoku{value: val, isSet: true}
}

func (v NullableUpdateAppRequestRoku) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateAppRequestRoku) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


