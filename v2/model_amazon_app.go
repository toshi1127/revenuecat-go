/*
Developer API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the AmazonApp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AmazonApp{}

// AmazonApp struct for AmazonApp
type AmazonApp struct {
	Amazon *AmazonAppAmazon `json:"amazon,omitempty"`
}

// NewAmazonApp instantiates a new AmazonApp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAmazonApp() *AmazonApp {
	this := AmazonApp{}
	return &this
}

// NewAmazonAppWithDefaults instantiates a new AmazonApp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAmazonAppWithDefaults() *AmazonApp {
	this := AmazonApp{}
	return &this
}

// GetAmazon returns the Amazon field value if set, zero value otherwise.
func (o *AmazonApp) GetAmazon() AmazonAppAmazon {
	if o == nil || IsNil(o.Amazon) {
		var ret AmazonAppAmazon
		return ret
	}
	return *o.Amazon
}

// GetAmazonOk returns a tuple with the Amazon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmazonApp) GetAmazonOk() (*AmazonAppAmazon, bool) {
	if o == nil || IsNil(o.Amazon) {
		return nil, false
	}
	return o.Amazon, true
}

// HasAmazon returns a boolean if a field has been set.
func (o *AmazonApp) HasAmazon() bool {
	if o != nil && !IsNil(o.Amazon) {
		return true
	}

	return false
}

// SetAmazon gets a reference to the given AmazonAppAmazon and assigns it to the Amazon field.
func (o *AmazonApp) SetAmazon(v AmazonAppAmazon) {
	o.Amazon = &v
}

func (o AmazonApp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AmazonApp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amazon) {
		toSerialize["amazon"] = o.Amazon
	}
	return toSerialize, nil
}

type NullableAmazonApp struct {
	value *AmazonApp
	isSet bool
}

func (v NullableAmazonApp) Get() *AmazonApp {
	return v.value
}

func (v *NullableAmazonApp) Set(val *AmazonApp) {
	v.value = val
	v.isSet = true
}

func (v NullableAmazonApp) IsSet() bool {
	return v.isSet
}

func (v *NullableAmazonApp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAmazonApp(val *AmazonApp) *NullableAmazonApp {
	return &NullableAmazonApp{value: val, isSet: true}
}

func (v NullableAmazonApp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAmazonApp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


