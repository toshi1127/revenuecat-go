/*
Developer API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the UpdateOfferingRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateOfferingRequest{}

// UpdateOfferingRequest struct for UpdateOfferingRequest
type UpdateOfferingRequest struct {
	// The display name of the offering
	DisplayName *string `json:"display_name,omitempty"`
	// Indicates if the offering is the current offering
	IsCurrent *bool `json:"is_current,omitempty"`
	// Custom metadata of the offering
	Metadata map[string]interface{} `json:"metadata,omitempty"`
}

// NewUpdateOfferingRequest instantiates a new UpdateOfferingRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateOfferingRequest() *UpdateOfferingRequest {
	this := UpdateOfferingRequest{}
	return &this
}

// NewUpdateOfferingRequestWithDefaults instantiates a new UpdateOfferingRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateOfferingRequestWithDefaults() *UpdateOfferingRequest {
	this := UpdateOfferingRequest{}
	return &this
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *UpdateOfferingRequest) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOfferingRequest) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *UpdateOfferingRequest) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *UpdateOfferingRequest) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetIsCurrent returns the IsCurrent field value if set, zero value otherwise.
func (o *UpdateOfferingRequest) GetIsCurrent() bool {
	if o == nil || IsNil(o.IsCurrent) {
		var ret bool
		return ret
	}
	return *o.IsCurrent
}

// GetIsCurrentOk returns a tuple with the IsCurrent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOfferingRequest) GetIsCurrentOk() (*bool, bool) {
	if o == nil || IsNil(o.IsCurrent) {
		return nil, false
	}
	return o.IsCurrent, true
}

// HasIsCurrent returns a boolean if a field has been set.
func (o *UpdateOfferingRequest) HasIsCurrent() bool {
	if o != nil && !IsNil(o.IsCurrent) {
		return true
	}

	return false
}

// SetIsCurrent gets a reference to the given bool and assigns it to the IsCurrent field.
func (o *UpdateOfferingRequest) SetIsCurrent(v bool) {
	o.IsCurrent = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateOfferingRequest) GetMetadata() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateOfferingRequest) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *UpdateOfferingRequest) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *UpdateOfferingRequest) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

func (o UpdateOfferingRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateOfferingRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DisplayName) {
		toSerialize["display_name"] = o.DisplayName
	}
	if !IsNil(o.IsCurrent) {
		toSerialize["is_current"] = o.IsCurrent
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	return toSerialize, nil
}

type NullableUpdateOfferingRequest struct {
	value *UpdateOfferingRequest
	isSet bool
}

func (v NullableUpdateOfferingRequest) Get() *UpdateOfferingRequest {
	return v.value
}

func (v *NullableUpdateOfferingRequest) Set(val *UpdateOfferingRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateOfferingRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateOfferingRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateOfferingRequest(val *UpdateOfferingRequest) *NullableUpdateOfferingRequest {
	return &NullableUpdateOfferingRequest{value: val, isSet: true}
}

func (v NullableUpdateOfferingRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateOfferingRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


