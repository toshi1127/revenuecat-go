/*
Developer API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CustomerEntitlement type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomerEntitlement{}

// CustomerEntitlement struct for CustomerEntitlement
type CustomerEntitlement struct {
	// String representing the object's type. Objects of the same type share the same value.
	Object string `json:"object"`
	// ID of the entitlement granted to the customer
	EntitlementId string `json:"entitlement_id"`
	// The date after which the access to the entitlement expires in ms since epoch
	ExpiresAt NullableInt64 `json:"expires_at"`
}

type _CustomerEntitlement CustomerEntitlement

// NewCustomerEntitlement instantiates a new CustomerEntitlement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomerEntitlement(object string, entitlementId string, expiresAt NullableInt64) *CustomerEntitlement {
	this := CustomerEntitlement{}
	this.Object = object
	this.EntitlementId = entitlementId
	this.ExpiresAt = expiresAt
	return &this
}

// NewCustomerEntitlementWithDefaults instantiates a new CustomerEntitlement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerEntitlementWithDefaults() *CustomerEntitlement {
	this := CustomerEntitlement{}
	return &this
}

// GetObject returns the Object field value
func (o *CustomerEntitlement) GetObject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Object
}

// GetObjectOk returns a tuple with the Object field value
// and a boolean to check if the value has been set.
func (o *CustomerEntitlement) GetObjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Object, true
}

// SetObject sets field value
func (o *CustomerEntitlement) SetObject(v string) {
	o.Object = v
}

// GetEntitlementId returns the EntitlementId field value
func (o *CustomerEntitlement) GetEntitlementId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntitlementId
}

// GetEntitlementIdOk returns a tuple with the EntitlementId field value
// and a boolean to check if the value has been set.
func (o *CustomerEntitlement) GetEntitlementIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntitlementId, true
}

// SetEntitlementId sets field value
func (o *CustomerEntitlement) SetEntitlementId(v string) {
	o.EntitlementId = v
}

// GetExpiresAt returns the ExpiresAt field value
// If the value is explicit nil, the zero value for int64 will be returned
func (o *CustomerEntitlement) GetExpiresAt() int64 {
	if o == nil || o.ExpiresAt.Get() == nil {
		var ret int64
		return ret
	}

	return *o.ExpiresAt.Get()
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomerEntitlement) GetExpiresAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpiresAt.Get(), o.ExpiresAt.IsSet()
}

// SetExpiresAt sets field value
func (o *CustomerEntitlement) SetExpiresAt(v int64) {
	o.ExpiresAt.Set(&v)
}

func (o CustomerEntitlement) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomerEntitlement) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["object"] = o.Object
	toSerialize["entitlement_id"] = o.EntitlementId
	toSerialize["expires_at"] = o.ExpiresAt.Get()
	return toSerialize, nil
}

func (o *CustomerEntitlement) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"object",
		"entitlement_id",
		"expires_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCustomerEntitlement := _CustomerEntitlement{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCustomerEntitlement)

	if err != nil {
		return err
	}

	*o = CustomerEntitlement(varCustomerEntitlement)

	return err
}

type NullableCustomerEntitlement struct {
	value *CustomerEntitlement
	isSet bool
}

func (v NullableCustomerEntitlement) Get() *CustomerEntitlement {
	return v.value
}

func (v *NullableCustomerEntitlement) Set(val *CustomerEntitlement) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerEntitlement) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerEntitlement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerEntitlement(val *CustomerEntitlement) *NullableCustomerEntitlement {
	return &NullableCustomerEntitlement{value: val, isSet: true}
}

func (v NullableCustomerEntitlement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerEntitlement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


