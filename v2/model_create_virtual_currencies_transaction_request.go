/*
Developer API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateVirtualCurrenciesTransactionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateVirtualCurrenciesTransactionRequest{}

// CreateVirtualCurrenciesTransactionRequest struct for CreateVirtualCurrenciesTransactionRequest
type CreateVirtualCurrenciesTransactionRequest struct {
	// The adjustments to the virtual currencies
	Adjustments map[string]int32 `json:"adjustments"`
	// The reference of the transaction
	Reference NullableString `json:"reference,omitempty"`
}

type _CreateVirtualCurrenciesTransactionRequest CreateVirtualCurrenciesTransactionRequest

// NewCreateVirtualCurrenciesTransactionRequest instantiates a new CreateVirtualCurrenciesTransactionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateVirtualCurrenciesTransactionRequest(adjustments map[string]int32) *CreateVirtualCurrenciesTransactionRequest {
	this := CreateVirtualCurrenciesTransactionRequest{}
	this.Adjustments = adjustments
	return &this
}

// NewCreateVirtualCurrenciesTransactionRequestWithDefaults instantiates a new CreateVirtualCurrenciesTransactionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateVirtualCurrenciesTransactionRequestWithDefaults() *CreateVirtualCurrenciesTransactionRequest {
	this := CreateVirtualCurrenciesTransactionRequest{}
	return &this
}

// GetAdjustments returns the Adjustments field value
func (o *CreateVirtualCurrenciesTransactionRequest) GetAdjustments() map[string]int32 {
	if o == nil {
		var ret map[string]int32
		return ret
	}

	return o.Adjustments
}

// GetAdjustmentsOk returns a tuple with the Adjustments field value
// and a boolean to check if the value has been set.
func (o *CreateVirtualCurrenciesTransactionRequest) GetAdjustmentsOk() (*map[string]int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Adjustments, true
}

// SetAdjustments sets field value
func (o *CreateVirtualCurrenciesTransactionRequest) SetAdjustments(v map[string]int32) {
	o.Adjustments = v
}

// GetReference returns the Reference field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateVirtualCurrenciesTransactionRequest) GetReference() string {
	if o == nil || IsNil(o.Reference.Get()) {
		var ret string
		return ret
	}
	return *o.Reference.Get()
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateVirtualCurrenciesTransactionRequest) GetReferenceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Reference.Get(), o.Reference.IsSet()
}

// HasReference returns a boolean if a field has been set.
func (o *CreateVirtualCurrenciesTransactionRequest) HasReference() bool {
	if o != nil && o.Reference.IsSet() {
		return true
	}

	return false
}

// SetReference gets a reference to the given NullableString and assigns it to the Reference field.
func (o *CreateVirtualCurrenciesTransactionRequest) SetReference(v string) {
	o.Reference.Set(&v)
}
// SetReferenceNil sets the value for Reference to be an explicit nil
func (o *CreateVirtualCurrenciesTransactionRequest) SetReferenceNil() {
	o.Reference.Set(nil)
}

// UnsetReference ensures that no value is present for Reference, not even an explicit nil
func (o *CreateVirtualCurrenciesTransactionRequest) UnsetReference() {
	o.Reference.Unset()
}

func (o CreateVirtualCurrenciesTransactionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateVirtualCurrenciesTransactionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["adjustments"] = o.Adjustments
	if o.Reference.IsSet() {
		toSerialize["reference"] = o.Reference.Get()
	}
	return toSerialize, nil
}

func (o *CreateVirtualCurrenciesTransactionRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"adjustments",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateVirtualCurrenciesTransactionRequest := _CreateVirtualCurrenciesTransactionRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateVirtualCurrenciesTransactionRequest)

	if err != nil {
		return err
	}

	*o = CreateVirtualCurrenciesTransactionRequest(varCreateVirtualCurrenciesTransactionRequest)

	return err
}

type NullableCreateVirtualCurrenciesTransactionRequest struct {
	value *CreateVirtualCurrenciesTransactionRequest
	isSet bool
}

func (v NullableCreateVirtualCurrenciesTransactionRequest) Get() *CreateVirtualCurrenciesTransactionRequest {
	return v.value
}

func (v *NullableCreateVirtualCurrenciesTransactionRequest) Set(val *CreateVirtualCurrenciesTransactionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateVirtualCurrenciesTransactionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateVirtualCurrenciesTransactionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateVirtualCurrenciesTransactionRequest(val *CreateVirtualCurrenciesTransactionRequest) *NullableCreateVirtualCurrenciesTransactionRequest {
	return &NullableCreateVirtualCurrenciesTransactionRequest{value: val, isSet: true}
}

func (v NullableCreateVirtualCurrenciesTransactionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateVirtualCurrenciesTransactionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


