/*
Developer API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the Invoice type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Invoice{}

// Invoice struct for Invoice
type Invoice struct {
	// String representing the object's type. Objects of the same type share the same value.
	Object string `json:"object"`
	// The id of the invoice
	Id string `json:"id"`
	TotalAmount MonetaryAmount `json:"total_amount"`
	// List of line items that are part of the invoice. Each line item represents a product that was purchased.
	LineItems []InvoiceLineItem `json:"line_items"`
	// The date when the invoiced was issued in ms since epoch
	IssuedAt int64 `json:"issued_at"`
	// The date when the invoiced was paid in ms since epoch
	PaidAt NullableInt64 `json:"paid_at"`
	// URL to download the invoice pdf
	InvoiceUrl NullableString `json:"invoice_url"`
}

type _Invoice Invoice

// NewInvoice instantiates a new Invoice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoice(object string, id string, totalAmount MonetaryAmount, lineItems []InvoiceLineItem, issuedAt int64, paidAt NullableInt64, invoiceUrl NullableString) *Invoice {
	this := Invoice{}
	this.Object = object
	this.Id = id
	this.TotalAmount = totalAmount
	this.LineItems = lineItems
	this.IssuedAt = issuedAt
	this.PaidAt = paidAt
	this.InvoiceUrl = invoiceUrl
	return &this
}

// NewInvoiceWithDefaults instantiates a new Invoice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoiceWithDefaults() *Invoice {
	this := Invoice{}
	return &this
}

// GetObject returns the Object field value
func (o *Invoice) GetObject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Object
}

// GetObjectOk returns a tuple with the Object field value
// and a boolean to check if the value has been set.
func (o *Invoice) GetObjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Object, true
}

// SetObject sets field value
func (o *Invoice) SetObject(v string) {
	o.Object = v
}

// GetId returns the Id field value
func (o *Invoice) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Invoice) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Invoice) SetId(v string) {
	o.Id = v
}

// GetTotalAmount returns the TotalAmount field value
func (o *Invoice) GetTotalAmount() MonetaryAmount {
	if o == nil {
		var ret MonetaryAmount
		return ret
	}

	return o.TotalAmount
}

// GetTotalAmountOk returns a tuple with the TotalAmount field value
// and a boolean to check if the value has been set.
func (o *Invoice) GetTotalAmountOk() (*MonetaryAmount, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalAmount, true
}

// SetTotalAmount sets field value
func (o *Invoice) SetTotalAmount(v MonetaryAmount) {
	o.TotalAmount = v
}

// GetLineItems returns the LineItems field value
func (o *Invoice) GetLineItems() []InvoiceLineItem {
	if o == nil {
		var ret []InvoiceLineItem
		return ret
	}

	return o.LineItems
}

// GetLineItemsOk returns a tuple with the LineItems field value
// and a boolean to check if the value has been set.
func (o *Invoice) GetLineItemsOk() ([]InvoiceLineItem, bool) {
	if o == nil {
		return nil, false
	}
	return o.LineItems, true
}

// SetLineItems sets field value
func (o *Invoice) SetLineItems(v []InvoiceLineItem) {
	o.LineItems = v
}

// GetIssuedAt returns the IssuedAt field value
func (o *Invoice) GetIssuedAt() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.IssuedAt
}

// GetIssuedAtOk returns a tuple with the IssuedAt field value
// and a boolean to check if the value has been set.
func (o *Invoice) GetIssuedAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IssuedAt, true
}

// SetIssuedAt sets field value
func (o *Invoice) SetIssuedAt(v int64) {
	o.IssuedAt = v
}

// GetPaidAt returns the PaidAt field value
// If the value is explicit nil, the zero value for int64 will be returned
func (o *Invoice) GetPaidAt() int64 {
	if o == nil || o.PaidAt.Get() == nil {
		var ret int64
		return ret
	}

	return *o.PaidAt.Get()
}

// GetPaidAtOk returns a tuple with the PaidAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Invoice) GetPaidAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.PaidAt.Get(), o.PaidAt.IsSet()
}

// SetPaidAt sets field value
func (o *Invoice) SetPaidAt(v int64) {
	o.PaidAt.Set(&v)
}

// GetInvoiceUrl returns the InvoiceUrl field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Invoice) GetInvoiceUrl() string {
	if o == nil || o.InvoiceUrl.Get() == nil {
		var ret string
		return ret
	}

	return *o.InvoiceUrl.Get()
}

// GetInvoiceUrlOk returns a tuple with the InvoiceUrl field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Invoice) GetInvoiceUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InvoiceUrl.Get(), o.InvoiceUrl.IsSet()
}

// SetInvoiceUrl sets field value
func (o *Invoice) SetInvoiceUrl(v string) {
	o.InvoiceUrl.Set(&v)
}

func (o Invoice) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Invoice) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["object"] = o.Object
	toSerialize["id"] = o.Id
	toSerialize["total_amount"] = o.TotalAmount
	toSerialize["line_items"] = o.LineItems
	toSerialize["issued_at"] = o.IssuedAt
	toSerialize["paid_at"] = o.PaidAt.Get()
	toSerialize["invoice_url"] = o.InvoiceUrl.Get()
	return toSerialize, nil
}

func (o *Invoice) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"object",
		"id",
		"total_amount",
		"line_items",
		"issued_at",
		"paid_at",
		"invoice_url",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varInvoice := _Invoice{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varInvoice)

	if err != nil {
		return err
	}

	*o = Invoice(varInvoice)

	return err
}

type NullableInvoice struct {
	value *Invoice
	isSet bool
}

func (v NullableInvoice) Get() *Invoice {
	return v.value
}

func (v *NullableInvoice) Set(val *Invoice) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoice) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoice(val *Invoice) *NullableInvoice {
	return &NullableInvoice{value: val, isSet: true}
}

func (v NullableInvoice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


