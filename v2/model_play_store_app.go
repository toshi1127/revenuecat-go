/*
Developer API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the PlayStoreApp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PlayStoreApp{}

// PlayStoreApp struct for PlayStoreApp
type PlayStoreApp struct {
	PlayStore *PlayStoreAppPlayStore `json:"play_store,omitempty"`
}

// NewPlayStoreApp instantiates a new PlayStoreApp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlayStoreApp() *PlayStoreApp {
	this := PlayStoreApp{}
	return &this
}

// NewPlayStoreAppWithDefaults instantiates a new PlayStoreApp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlayStoreAppWithDefaults() *PlayStoreApp {
	this := PlayStoreApp{}
	return &this
}

// GetPlayStore returns the PlayStore field value if set, zero value otherwise.
func (o *PlayStoreApp) GetPlayStore() PlayStoreAppPlayStore {
	if o == nil || IsNil(o.PlayStore) {
		var ret PlayStoreAppPlayStore
		return ret
	}
	return *o.PlayStore
}

// GetPlayStoreOk returns a tuple with the PlayStore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlayStoreApp) GetPlayStoreOk() (*PlayStoreAppPlayStore, bool) {
	if o == nil || IsNil(o.PlayStore) {
		return nil, false
	}
	return o.PlayStore, true
}

// HasPlayStore returns a boolean if a field has been set.
func (o *PlayStoreApp) HasPlayStore() bool {
	if o != nil && !IsNil(o.PlayStore) {
		return true
	}

	return false
}

// SetPlayStore gets a reference to the given PlayStoreAppPlayStore and assigns it to the PlayStore field.
func (o *PlayStoreApp) SetPlayStore(v PlayStoreAppPlayStore) {
	o.PlayStore = &v
}

func (o PlayStoreApp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PlayStoreApp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PlayStore) {
		toSerialize["play_store"] = o.PlayStore
	}
	return toSerialize, nil
}

type NullablePlayStoreApp struct {
	value *PlayStoreApp
	isSet bool
}

func (v NullablePlayStoreApp) Get() *PlayStoreApp {
	return v.value
}

func (v *NullablePlayStoreApp) Set(val *PlayStoreApp) {
	v.value = val
	v.isSet = true
}

func (v NullablePlayStoreApp) IsSet() bool {
	return v.isSet
}

func (v *NullablePlayStoreApp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlayStoreApp(val *PlayStoreApp) *NullablePlayStoreApp {
	return &NullablePlayStoreApp{value: val, isSet: true}
}

func (v NullablePlayStoreApp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlayStoreApp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


