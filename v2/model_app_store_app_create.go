/*
Developer API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the AppStoreAppCreate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppStoreAppCreate{}

// AppStoreAppCreate struct for AppStoreAppCreate
type AppStoreAppCreate struct {
	AppStore *AppStoreAppCreateAppStore `json:"app_store,omitempty"`
}

// NewAppStoreAppCreate instantiates a new AppStoreAppCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppStoreAppCreate() *AppStoreAppCreate {
	this := AppStoreAppCreate{}
	return &this
}

// NewAppStoreAppCreateWithDefaults instantiates a new AppStoreAppCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppStoreAppCreateWithDefaults() *AppStoreAppCreate {
	this := AppStoreAppCreate{}
	return &this
}

// GetAppStore returns the AppStore field value if set, zero value otherwise.
func (o *AppStoreAppCreate) GetAppStore() AppStoreAppCreateAppStore {
	if o == nil || IsNil(o.AppStore) {
		var ret AppStoreAppCreateAppStore
		return ret
	}
	return *o.AppStore
}

// GetAppStoreOk returns a tuple with the AppStore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppStoreAppCreate) GetAppStoreOk() (*AppStoreAppCreateAppStore, bool) {
	if o == nil || IsNil(o.AppStore) {
		return nil, false
	}
	return o.AppStore, true
}

// HasAppStore returns a boolean if a field has been set.
func (o *AppStoreAppCreate) HasAppStore() bool {
	if o != nil && !IsNil(o.AppStore) {
		return true
	}

	return false
}

// SetAppStore gets a reference to the given AppStoreAppCreateAppStore and assigns it to the AppStore field.
func (o *AppStoreAppCreate) SetAppStore(v AppStoreAppCreateAppStore) {
	o.AppStore = &v
}

func (o AppStoreAppCreate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppStoreAppCreate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AppStore) {
		toSerialize["app_store"] = o.AppStore
	}
	return toSerialize, nil
}

type NullableAppStoreAppCreate struct {
	value *AppStoreAppCreate
	isSet bool
}

func (v NullableAppStoreAppCreate) Get() *AppStoreAppCreate {
	return v.value
}

func (v *NullableAppStoreAppCreate) Set(val *AppStoreAppCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableAppStoreAppCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableAppStoreAppCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppStoreAppCreate(val *AppStoreAppCreate) *NullableAppStoreAppCreate {
	return &NullableAppStoreAppCreate{value: val, isSet: true}
}

func (v NullableAppStoreAppCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppStoreAppCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


