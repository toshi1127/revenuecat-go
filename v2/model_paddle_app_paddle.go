/*
Developer API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the PaddleAppPaddle type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaddleAppPaddle{}

// PaddleAppPaddle Paddle Billing type details
type PaddleAppPaddle struct {
	// Whether the app is tied to the sandbox environment.
	PaddleIsSandbox *bool `json:"paddle_is_sandbox,omitempty"`
	// Paddle Server-side API key provided on the Paddle dashboard.
	PaddleApiKey NullableString `json:"paddle_api_key,omitempty"`
}

// NewPaddleAppPaddle instantiates a new PaddleAppPaddle object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaddleAppPaddle() *PaddleAppPaddle {
	this := PaddleAppPaddle{}
	return &this
}

// NewPaddleAppPaddleWithDefaults instantiates a new PaddleAppPaddle object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaddleAppPaddleWithDefaults() *PaddleAppPaddle {
	this := PaddleAppPaddle{}
	return &this
}

// GetPaddleIsSandbox returns the PaddleIsSandbox field value if set, zero value otherwise.
func (o *PaddleAppPaddle) GetPaddleIsSandbox() bool {
	if o == nil || IsNil(o.PaddleIsSandbox) {
		var ret bool
		return ret
	}
	return *o.PaddleIsSandbox
}

// GetPaddleIsSandboxOk returns a tuple with the PaddleIsSandbox field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaddleAppPaddle) GetPaddleIsSandboxOk() (*bool, bool) {
	if o == nil || IsNil(o.PaddleIsSandbox) {
		return nil, false
	}
	return o.PaddleIsSandbox, true
}

// HasPaddleIsSandbox returns a boolean if a field has been set.
func (o *PaddleAppPaddle) HasPaddleIsSandbox() bool {
	if o != nil && !IsNil(o.PaddleIsSandbox) {
		return true
	}

	return false
}

// SetPaddleIsSandbox gets a reference to the given bool and assigns it to the PaddleIsSandbox field.
func (o *PaddleAppPaddle) SetPaddleIsSandbox(v bool) {
	o.PaddleIsSandbox = &v
}

// GetPaddleApiKey returns the PaddleApiKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaddleAppPaddle) GetPaddleApiKey() string {
	if o == nil || IsNil(o.PaddleApiKey.Get()) {
		var ret string
		return ret
	}
	return *o.PaddleApiKey.Get()
}

// GetPaddleApiKeyOk returns a tuple with the PaddleApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaddleAppPaddle) GetPaddleApiKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PaddleApiKey.Get(), o.PaddleApiKey.IsSet()
}

// HasPaddleApiKey returns a boolean if a field has been set.
func (o *PaddleAppPaddle) HasPaddleApiKey() bool {
	if o != nil && o.PaddleApiKey.IsSet() {
		return true
	}

	return false
}

// SetPaddleApiKey gets a reference to the given NullableString and assigns it to the PaddleApiKey field.
func (o *PaddleAppPaddle) SetPaddleApiKey(v string) {
	o.PaddleApiKey.Set(&v)
}
// SetPaddleApiKeyNil sets the value for PaddleApiKey to be an explicit nil
func (o *PaddleAppPaddle) SetPaddleApiKeyNil() {
	o.PaddleApiKey.Set(nil)
}

// UnsetPaddleApiKey ensures that no value is present for PaddleApiKey, not even an explicit nil
func (o *PaddleAppPaddle) UnsetPaddleApiKey() {
	o.PaddleApiKey.Unset()
}

func (o PaddleAppPaddle) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaddleAppPaddle) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PaddleIsSandbox) {
		toSerialize["paddle_is_sandbox"] = o.PaddleIsSandbox
	}
	if o.PaddleApiKey.IsSet() {
		toSerialize["paddle_api_key"] = o.PaddleApiKey.Get()
	}
	return toSerialize, nil
}

type NullablePaddleAppPaddle struct {
	value *PaddleAppPaddle
	isSet bool
}

func (v NullablePaddleAppPaddle) Get() *PaddleAppPaddle {
	return v.value
}

func (v *NullablePaddleAppPaddle) Set(val *PaddleAppPaddle) {
	v.value = val
	v.isSet = true
}

func (v NullablePaddleAppPaddle) IsSet() bool {
	return v.isSet
}

func (v *NullablePaddleAppPaddle) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaddleAppPaddle(val *PaddleAppPaddle) *NullablePaddleAppPaddle {
	return &NullablePaddleAppPaddle{value: val, isSet: true}
}

func (v NullablePaddleAppPaddle) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaddleAppPaddle) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


