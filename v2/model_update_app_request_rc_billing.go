/*
Developer API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the UpdateAppRequestRcBilling type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateAppRequestRcBilling{}

// UpdateAppRequestRcBilling Web Billing type details. Should only be used when type is rc_billing.
type UpdateAppRequestRcBilling struct {
	// It needs to be connected to your RevenueCat account. It can be omitted if you only have a single Stripe account connected to your RevenueCat account.
	StripeAccountId NullableString `json:"stripe_account_id,omitempty"`
	// Shown in checkout, emails, and receipts sent to customers.
	AppName NullableString `json:"app_name,omitempty"`
	// Used as the `reply to` address in all emails sent to customers, to allow them to receive support. If you leave this field blank, your RevenueCat account email address will be used.
	SupportEmail NullableString `json:"support_email,omitempty"`
	DefaultCurrency *RCBillingCurrency `json:"default_currency,omitempty"`
}

// NewUpdateAppRequestRcBilling instantiates a new UpdateAppRequestRcBilling object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateAppRequestRcBilling() *UpdateAppRequestRcBilling {
	this := UpdateAppRequestRcBilling{}
	return &this
}

// NewUpdateAppRequestRcBillingWithDefaults instantiates a new UpdateAppRequestRcBilling object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateAppRequestRcBillingWithDefaults() *UpdateAppRequestRcBilling {
	this := UpdateAppRequestRcBilling{}
	return &this
}

// GetStripeAccountId returns the StripeAccountId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateAppRequestRcBilling) GetStripeAccountId() string {
	if o == nil || IsNil(o.StripeAccountId.Get()) {
		var ret string
		return ret
	}
	return *o.StripeAccountId.Get()
}

// GetStripeAccountIdOk returns a tuple with the StripeAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateAppRequestRcBilling) GetStripeAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StripeAccountId.Get(), o.StripeAccountId.IsSet()
}

// HasStripeAccountId returns a boolean if a field has been set.
func (o *UpdateAppRequestRcBilling) HasStripeAccountId() bool {
	if o != nil && o.StripeAccountId.IsSet() {
		return true
	}

	return false
}

// SetStripeAccountId gets a reference to the given NullableString and assigns it to the StripeAccountId field.
func (o *UpdateAppRequestRcBilling) SetStripeAccountId(v string) {
	o.StripeAccountId.Set(&v)
}
// SetStripeAccountIdNil sets the value for StripeAccountId to be an explicit nil
func (o *UpdateAppRequestRcBilling) SetStripeAccountIdNil() {
	o.StripeAccountId.Set(nil)
}

// UnsetStripeAccountId ensures that no value is present for StripeAccountId, not even an explicit nil
func (o *UpdateAppRequestRcBilling) UnsetStripeAccountId() {
	o.StripeAccountId.Unset()
}

// GetAppName returns the AppName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateAppRequestRcBilling) GetAppName() string {
	if o == nil || IsNil(o.AppName.Get()) {
		var ret string
		return ret
	}
	return *o.AppName.Get()
}

// GetAppNameOk returns a tuple with the AppName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateAppRequestRcBilling) GetAppNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AppName.Get(), o.AppName.IsSet()
}

// HasAppName returns a boolean if a field has been set.
func (o *UpdateAppRequestRcBilling) HasAppName() bool {
	if o != nil && o.AppName.IsSet() {
		return true
	}

	return false
}

// SetAppName gets a reference to the given NullableString and assigns it to the AppName field.
func (o *UpdateAppRequestRcBilling) SetAppName(v string) {
	o.AppName.Set(&v)
}
// SetAppNameNil sets the value for AppName to be an explicit nil
func (o *UpdateAppRequestRcBilling) SetAppNameNil() {
	o.AppName.Set(nil)
}

// UnsetAppName ensures that no value is present for AppName, not even an explicit nil
func (o *UpdateAppRequestRcBilling) UnsetAppName() {
	o.AppName.Unset()
}

// GetSupportEmail returns the SupportEmail field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateAppRequestRcBilling) GetSupportEmail() string {
	if o == nil || IsNil(o.SupportEmail.Get()) {
		var ret string
		return ret
	}
	return *o.SupportEmail.Get()
}

// GetSupportEmailOk returns a tuple with the SupportEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateAppRequestRcBilling) GetSupportEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SupportEmail.Get(), o.SupportEmail.IsSet()
}

// HasSupportEmail returns a boolean if a field has been set.
func (o *UpdateAppRequestRcBilling) HasSupportEmail() bool {
	if o != nil && o.SupportEmail.IsSet() {
		return true
	}

	return false
}

// SetSupportEmail gets a reference to the given NullableString and assigns it to the SupportEmail field.
func (o *UpdateAppRequestRcBilling) SetSupportEmail(v string) {
	o.SupportEmail.Set(&v)
}
// SetSupportEmailNil sets the value for SupportEmail to be an explicit nil
func (o *UpdateAppRequestRcBilling) SetSupportEmailNil() {
	o.SupportEmail.Set(nil)
}

// UnsetSupportEmail ensures that no value is present for SupportEmail, not even an explicit nil
func (o *UpdateAppRequestRcBilling) UnsetSupportEmail() {
	o.SupportEmail.Unset()
}

// GetDefaultCurrency returns the DefaultCurrency field value if set, zero value otherwise.
func (o *UpdateAppRequestRcBilling) GetDefaultCurrency() RCBillingCurrency {
	if o == nil || IsNil(o.DefaultCurrency) {
		var ret RCBillingCurrency
		return ret
	}
	return *o.DefaultCurrency
}

// GetDefaultCurrencyOk returns a tuple with the DefaultCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAppRequestRcBilling) GetDefaultCurrencyOk() (*RCBillingCurrency, bool) {
	if o == nil || IsNil(o.DefaultCurrency) {
		return nil, false
	}
	return o.DefaultCurrency, true
}

// HasDefaultCurrency returns a boolean if a field has been set.
func (o *UpdateAppRequestRcBilling) HasDefaultCurrency() bool {
	if o != nil && !IsNil(o.DefaultCurrency) {
		return true
	}

	return false
}

// SetDefaultCurrency gets a reference to the given RCBillingCurrency and assigns it to the DefaultCurrency field.
func (o *UpdateAppRequestRcBilling) SetDefaultCurrency(v RCBillingCurrency) {
	o.DefaultCurrency = &v
}

func (o UpdateAppRequestRcBilling) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateAppRequestRcBilling) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.StripeAccountId.IsSet() {
		toSerialize["stripe_account_id"] = o.StripeAccountId.Get()
	}
	if o.AppName.IsSet() {
		toSerialize["app_name"] = o.AppName.Get()
	}
	if o.SupportEmail.IsSet() {
		toSerialize["support_email"] = o.SupportEmail.Get()
	}
	if !IsNil(o.DefaultCurrency) {
		toSerialize["default_currency"] = o.DefaultCurrency
	}
	return toSerialize, nil
}

type NullableUpdateAppRequestRcBilling struct {
	value *UpdateAppRequestRcBilling
	isSet bool
}

func (v NullableUpdateAppRequestRcBilling) Get() *UpdateAppRequestRcBilling {
	return v.value
}

func (v *NullableUpdateAppRequestRcBilling) Set(val *UpdateAppRequestRcBilling) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateAppRequestRcBilling) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateAppRequestRcBilling) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateAppRequestRcBilling(val *UpdateAppRequestRcBilling) *NullableUpdateAppRequestRcBilling {
	return &NullableUpdateAppRequestRcBilling{value: val, isSet: true}
}

func (v NullableUpdateAppRequestRcBilling) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateAppRequestRcBilling) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


