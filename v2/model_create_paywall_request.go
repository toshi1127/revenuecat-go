/*
Developer API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreatePaywallRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreatePaywallRequest{}

// CreatePaywallRequest struct for CreatePaywallRequest
type CreatePaywallRequest struct {
	// The ID of the offering the paywall will be created for. 
	OfferingId string `json:"offering_id"`
}

type _CreatePaywallRequest CreatePaywallRequest

// NewCreatePaywallRequest instantiates a new CreatePaywallRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreatePaywallRequest(offeringId string) *CreatePaywallRequest {
	this := CreatePaywallRequest{}
	this.OfferingId = offeringId
	return &this
}

// NewCreatePaywallRequestWithDefaults instantiates a new CreatePaywallRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreatePaywallRequestWithDefaults() *CreatePaywallRequest {
	this := CreatePaywallRequest{}
	return &this
}

// GetOfferingId returns the OfferingId field value
func (o *CreatePaywallRequest) GetOfferingId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OfferingId
}

// GetOfferingIdOk returns a tuple with the OfferingId field value
// and a boolean to check if the value has been set.
func (o *CreatePaywallRequest) GetOfferingIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OfferingId, true
}

// SetOfferingId sets field value
func (o *CreatePaywallRequest) SetOfferingId(v string) {
	o.OfferingId = v
}

func (o CreatePaywallRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreatePaywallRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["offering_id"] = o.OfferingId
	return toSerialize, nil
}

func (o *CreatePaywallRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"offering_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreatePaywallRequest := _CreatePaywallRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreatePaywallRequest)

	if err != nil {
		return err
	}

	*o = CreatePaywallRequest(varCreatePaywallRequest)

	return err
}

type NullableCreatePaywallRequest struct {
	value *CreatePaywallRequest
	isSet bool
}

func (v NullableCreatePaywallRequest) Get() *CreatePaywallRequest {
	return v.value
}

func (v *NullableCreatePaywallRequest) Set(val *CreatePaywallRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreatePaywallRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreatePaywallRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreatePaywallRequest(val *CreatePaywallRequest) *NullableCreatePaywallRequest {
	return &NullableCreatePaywallRequest{value: val, isSet: true}
}

func (v NullableCreatePaywallRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreatePaywallRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


