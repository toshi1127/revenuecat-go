/*
Developer API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SubscriptionProduct type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubscriptionProduct{}

// SubscriptionProduct struct for SubscriptionProduct
type SubscriptionProduct struct {
	// The duration of the subscription in ISO-8601 standard
	Duration NullableString `json:"duration" validate:"regexp=^(-?)P(?=\\\\d|T\\\\d)(?:(\\\\d+)Y)?(?:(\\\\d+)M)?(?:(\\\\d+)([DW]))?(?:T(?:(\\\\d+)H)?(?:(\\\\d+)M)?(?:(\\\\d+(?:\\\\.\\\\d+)?)S)?)?$"`
	// The duration of the subscription's grace period in ISO-8601 standard
	GracePeriodDuration NullableString `json:"grace_period_duration" validate:"regexp=^(-?)P(?=\\\\d|T\\\\d)(?:(\\\\d+)Y)?(?:(\\\\d+)M)?(?:(\\\\d+)([DW]))?(?:T(?:(\\\\d+)H)?(?:(\\\\d+)M)?(?:(\\\\d+(?:\\\\.\\\\d+)?)S)?)?$"`
	// The duration of the subscription's trial period in ISO-8601 standard
	TrialDuration NullableString `json:"trial_duration" validate:"regexp=^(-?)P(?=\\\\d|T\\\\d)(?:(\\\\d+)Y)?(?:(\\\\d+)M)?(?:(\\\\d+)([DW]))?(?:T(?:(\\\\d+)H)?(?:(\\\\d+)M)?(?:(\\\\d+(?:\\\\.\\\\d+)?)S)?)?$"`
}

type _SubscriptionProduct SubscriptionProduct

// NewSubscriptionProduct instantiates a new SubscriptionProduct object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriptionProduct(duration NullableString, gracePeriodDuration NullableString, trialDuration NullableString) *SubscriptionProduct {
	this := SubscriptionProduct{}
	this.Duration = duration
	this.GracePeriodDuration = gracePeriodDuration
	this.TrialDuration = trialDuration
	return &this
}

// NewSubscriptionProductWithDefaults instantiates a new SubscriptionProduct object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionProductWithDefaults() *SubscriptionProduct {
	this := SubscriptionProduct{}
	return &this
}

// GetDuration returns the Duration field value
// If the value is explicit nil, the zero value for string will be returned
func (o *SubscriptionProduct) GetDuration() string {
	if o == nil || o.Duration.Get() == nil {
		var ret string
		return ret
	}

	return *o.Duration.Get()
}

// GetDurationOk returns a tuple with the Duration field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubscriptionProduct) GetDurationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Duration.Get(), o.Duration.IsSet()
}

// SetDuration sets field value
func (o *SubscriptionProduct) SetDuration(v string) {
	o.Duration.Set(&v)
}

// GetGracePeriodDuration returns the GracePeriodDuration field value
// If the value is explicit nil, the zero value for string will be returned
func (o *SubscriptionProduct) GetGracePeriodDuration() string {
	if o == nil || o.GracePeriodDuration.Get() == nil {
		var ret string
		return ret
	}

	return *o.GracePeriodDuration.Get()
}

// GetGracePeriodDurationOk returns a tuple with the GracePeriodDuration field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubscriptionProduct) GetGracePeriodDurationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GracePeriodDuration.Get(), o.GracePeriodDuration.IsSet()
}

// SetGracePeriodDuration sets field value
func (o *SubscriptionProduct) SetGracePeriodDuration(v string) {
	o.GracePeriodDuration.Set(&v)
}

// GetTrialDuration returns the TrialDuration field value
// If the value is explicit nil, the zero value for string will be returned
func (o *SubscriptionProduct) GetTrialDuration() string {
	if o == nil || o.TrialDuration.Get() == nil {
		var ret string
		return ret
	}

	return *o.TrialDuration.Get()
}

// GetTrialDurationOk returns a tuple with the TrialDuration field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubscriptionProduct) GetTrialDurationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TrialDuration.Get(), o.TrialDuration.IsSet()
}

// SetTrialDuration sets field value
func (o *SubscriptionProduct) SetTrialDuration(v string) {
	o.TrialDuration.Set(&v)
}

func (o SubscriptionProduct) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubscriptionProduct) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["duration"] = o.Duration.Get()
	toSerialize["grace_period_duration"] = o.GracePeriodDuration.Get()
	toSerialize["trial_duration"] = o.TrialDuration.Get()
	return toSerialize, nil
}

func (o *SubscriptionProduct) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"duration",
		"grace_period_duration",
		"trial_duration",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSubscriptionProduct := _SubscriptionProduct{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSubscriptionProduct)

	if err != nil {
		return err
	}

	*o = SubscriptionProduct(varSubscriptionProduct)

	return err
}

type NullableSubscriptionProduct struct {
	value *SubscriptionProduct
	isSet bool
}

func (v NullableSubscriptionProduct) Get() *SubscriptionProduct {
	return v.value
}

func (v *NullableSubscriptionProduct) Set(val *SubscriptionProduct) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriptionProduct) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriptionProduct) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriptionProduct(val *SubscriptionProduct) *NullableSubscriptionProduct {
	return &NullableSubscriptionProduct{value: val, isSet: true}
}

func (v NullableSubscriptionProduct) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriptionProduct) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


