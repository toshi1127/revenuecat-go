/*
Developer API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the MacAppStoreApp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MacAppStoreApp{}

// MacAppStoreApp struct for MacAppStoreApp
type MacAppStoreApp struct {
	MacAppStore *MacAppStoreAppMacAppStore `json:"mac_app_store,omitempty"`
}

// NewMacAppStoreApp instantiates a new MacAppStoreApp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMacAppStoreApp() *MacAppStoreApp {
	this := MacAppStoreApp{}
	return &this
}

// NewMacAppStoreAppWithDefaults instantiates a new MacAppStoreApp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMacAppStoreAppWithDefaults() *MacAppStoreApp {
	this := MacAppStoreApp{}
	return &this
}

// GetMacAppStore returns the MacAppStore field value if set, zero value otherwise.
func (o *MacAppStoreApp) GetMacAppStore() MacAppStoreAppMacAppStore {
	if o == nil || IsNil(o.MacAppStore) {
		var ret MacAppStoreAppMacAppStore
		return ret
	}
	return *o.MacAppStore
}

// GetMacAppStoreOk returns a tuple with the MacAppStore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MacAppStoreApp) GetMacAppStoreOk() (*MacAppStoreAppMacAppStore, bool) {
	if o == nil || IsNil(o.MacAppStore) {
		return nil, false
	}
	return o.MacAppStore, true
}

// HasMacAppStore returns a boolean if a field has been set.
func (o *MacAppStoreApp) HasMacAppStore() bool {
	if o != nil && !IsNil(o.MacAppStore) {
		return true
	}

	return false
}

// SetMacAppStore gets a reference to the given MacAppStoreAppMacAppStore and assigns it to the MacAppStore field.
func (o *MacAppStoreApp) SetMacAppStore(v MacAppStoreAppMacAppStore) {
	o.MacAppStore = &v
}

func (o MacAppStoreApp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MacAppStoreApp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MacAppStore) {
		toSerialize["mac_app_store"] = o.MacAppStore
	}
	return toSerialize, nil
}

type NullableMacAppStoreApp struct {
	value *MacAppStoreApp
	isSet bool
}

func (v NullableMacAppStoreApp) Get() *MacAppStoreApp {
	return v.value
}

func (v *NullableMacAppStoreApp) Set(val *MacAppStoreApp) {
	v.value = val
	v.isSet = true
}

func (v NullableMacAppStoreApp) IsSet() bool {
	return v.isSet
}

func (v *NullableMacAppStoreApp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMacAppStoreApp(val *MacAppStoreApp) *NullableMacAppStoreApp {
	return &NullableMacAppStoreApp{value: val, isSet: true}
}

func (v NullableMacAppStoreApp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMacAppStoreApp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


