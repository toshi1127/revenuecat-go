/*
Developer API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateAppStoreConnectSubscriptionInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateAppStoreConnectSubscriptionInput{}

// CreateAppStoreConnectSubscriptionInput struct for CreateAppStoreConnectSubscriptionInput
type CreateAppStoreConnectSubscriptionInput struct {
	// The subscription duration period
	Duration string `json:"duration"`
	// The name of the subscription group
	SubscriptionGroupName string `json:"subscription_group_name"`
	// The ID of the subscription group (optional)
	SubscriptionGroupId NullableString `json:"subscription_group_id,omitempty"`
}

type _CreateAppStoreConnectSubscriptionInput CreateAppStoreConnectSubscriptionInput

// NewCreateAppStoreConnectSubscriptionInput instantiates a new CreateAppStoreConnectSubscriptionInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAppStoreConnectSubscriptionInput(duration string, subscriptionGroupName string) *CreateAppStoreConnectSubscriptionInput {
	this := CreateAppStoreConnectSubscriptionInput{}
	this.Duration = duration
	this.SubscriptionGroupName = subscriptionGroupName
	return &this
}

// NewCreateAppStoreConnectSubscriptionInputWithDefaults instantiates a new CreateAppStoreConnectSubscriptionInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAppStoreConnectSubscriptionInputWithDefaults() *CreateAppStoreConnectSubscriptionInput {
	this := CreateAppStoreConnectSubscriptionInput{}
	return &this
}

// GetDuration returns the Duration field value
func (o *CreateAppStoreConnectSubscriptionInput) GetDuration() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Duration
}

// GetDurationOk returns a tuple with the Duration field value
// and a boolean to check if the value has been set.
func (o *CreateAppStoreConnectSubscriptionInput) GetDurationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Duration, true
}

// SetDuration sets field value
func (o *CreateAppStoreConnectSubscriptionInput) SetDuration(v string) {
	o.Duration = v
}

// GetSubscriptionGroupName returns the SubscriptionGroupName field value
func (o *CreateAppStoreConnectSubscriptionInput) GetSubscriptionGroupName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubscriptionGroupName
}

// GetSubscriptionGroupNameOk returns a tuple with the SubscriptionGroupName field value
// and a boolean to check if the value has been set.
func (o *CreateAppStoreConnectSubscriptionInput) GetSubscriptionGroupNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubscriptionGroupName, true
}

// SetSubscriptionGroupName sets field value
func (o *CreateAppStoreConnectSubscriptionInput) SetSubscriptionGroupName(v string) {
	o.SubscriptionGroupName = v
}

// GetSubscriptionGroupId returns the SubscriptionGroupId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateAppStoreConnectSubscriptionInput) GetSubscriptionGroupId() string {
	if o == nil || IsNil(o.SubscriptionGroupId.Get()) {
		var ret string
		return ret
	}
	return *o.SubscriptionGroupId.Get()
}

// GetSubscriptionGroupIdOk returns a tuple with the SubscriptionGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAppStoreConnectSubscriptionInput) GetSubscriptionGroupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SubscriptionGroupId.Get(), o.SubscriptionGroupId.IsSet()
}

// HasSubscriptionGroupId returns a boolean if a field has been set.
func (o *CreateAppStoreConnectSubscriptionInput) HasSubscriptionGroupId() bool {
	if o != nil && o.SubscriptionGroupId.IsSet() {
		return true
	}

	return false
}

// SetSubscriptionGroupId gets a reference to the given NullableString and assigns it to the SubscriptionGroupId field.
func (o *CreateAppStoreConnectSubscriptionInput) SetSubscriptionGroupId(v string) {
	o.SubscriptionGroupId.Set(&v)
}
// SetSubscriptionGroupIdNil sets the value for SubscriptionGroupId to be an explicit nil
func (o *CreateAppStoreConnectSubscriptionInput) SetSubscriptionGroupIdNil() {
	o.SubscriptionGroupId.Set(nil)
}

// UnsetSubscriptionGroupId ensures that no value is present for SubscriptionGroupId, not even an explicit nil
func (o *CreateAppStoreConnectSubscriptionInput) UnsetSubscriptionGroupId() {
	o.SubscriptionGroupId.Unset()
}

func (o CreateAppStoreConnectSubscriptionInput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateAppStoreConnectSubscriptionInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["duration"] = o.Duration
	toSerialize["subscription_group_name"] = o.SubscriptionGroupName
	if o.SubscriptionGroupId.IsSet() {
		toSerialize["subscription_group_id"] = o.SubscriptionGroupId.Get()
	}
	return toSerialize, nil
}

func (o *CreateAppStoreConnectSubscriptionInput) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"duration",
		"subscription_group_name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateAppStoreConnectSubscriptionInput := _CreateAppStoreConnectSubscriptionInput{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateAppStoreConnectSubscriptionInput)

	if err != nil {
		return err
	}

	*o = CreateAppStoreConnectSubscriptionInput(varCreateAppStoreConnectSubscriptionInput)

	return err
}

type NullableCreateAppStoreConnectSubscriptionInput struct {
	value *CreateAppStoreConnectSubscriptionInput
	isSet bool
}

func (v NullableCreateAppStoreConnectSubscriptionInput) Get() *CreateAppStoreConnectSubscriptionInput {
	return v.value
}

func (v *NullableCreateAppStoreConnectSubscriptionInput) Set(val *CreateAppStoreConnectSubscriptionInput) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAppStoreConnectSubscriptionInput) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAppStoreConnectSubscriptionInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAppStoreConnectSubscriptionInput(val *CreateAppStoreConnectSubscriptionInput) *NullableCreateAppStoreConnectSubscriptionInput {
	return &NullableCreateAppStoreConnectSubscriptionInput{value: val, isSet: true}
}

func (v NullableCreateAppStoreConnectSubscriptionInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAppStoreConnectSubscriptionInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


