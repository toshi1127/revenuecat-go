/*
Developer API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the RokuAppRoku type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RokuAppRoku{}

// RokuAppRoku Roku Channel Store type details
type RokuAppRoku struct {
	// Channel ID provided on the Roku Channel page.
	RokuChannelId NullableString `json:"roku_channel_id,omitempty"`
	// Channel name that is displayed on the Roku Channel page.
	RokuChannelName NullableString `json:"roku_channel_name,omitempty"`
}

// NewRokuAppRoku instantiates a new RokuAppRoku object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRokuAppRoku() *RokuAppRoku {
	this := RokuAppRoku{}
	return &this
}

// NewRokuAppRokuWithDefaults instantiates a new RokuAppRoku object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRokuAppRokuWithDefaults() *RokuAppRoku {
	this := RokuAppRoku{}
	return &this
}

// GetRokuChannelId returns the RokuChannelId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RokuAppRoku) GetRokuChannelId() string {
	if o == nil || IsNil(o.RokuChannelId.Get()) {
		var ret string
		return ret
	}
	return *o.RokuChannelId.Get()
}

// GetRokuChannelIdOk returns a tuple with the RokuChannelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RokuAppRoku) GetRokuChannelIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RokuChannelId.Get(), o.RokuChannelId.IsSet()
}

// HasRokuChannelId returns a boolean if a field has been set.
func (o *RokuAppRoku) HasRokuChannelId() bool {
	if o != nil && o.RokuChannelId.IsSet() {
		return true
	}

	return false
}

// SetRokuChannelId gets a reference to the given NullableString and assigns it to the RokuChannelId field.
func (o *RokuAppRoku) SetRokuChannelId(v string) {
	o.RokuChannelId.Set(&v)
}
// SetRokuChannelIdNil sets the value for RokuChannelId to be an explicit nil
func (o *RokuAppRoku) SetRokuChannelIdNil() {
	o.RokuChannelId.Set(nil)
}

// UnsetRokuChannelId ensures that no value is present for RokuChannelId, not even an explicit nil
func (o *RokuAppRoku) UnsetRokuChannelId() {
	o.RokuChannelId.Unset()
}

// GetRokuChannelName returns the RokuChannelName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RokuAppRoku) GetRokuChannelName() string {
	if o == nil || IsNil(o.RokuChannelName.Get()) {
		var ret string
		return ret
	}
	return *o.RokuChannelName.Get()
}

// GetRokuChannelNameOk returns a tuple with the RokuChannelName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RokuAppRoku) GetRokuChannelNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RokuChannelName.Get(), o.RokuChannelName.IsSet()
}

// HasRokuChannelName returns a boolean if a field has been set.
func (o *RokuAppRoku) HasRokuChannelName() bool {
	if o != nil && o.RokuChannelName.IsSet() {
		return true
	}

	return false
}

// SetRokuChannelName gets a reference to the given NullableString and assigns it to the RokuChannelName field.
func (o *RokuAppRoku) SetRokuChannelName(v string) {
	o.RokuChannelName.Set(&v)
}
// SetRokuChannelNameNil sets the value for RokuChannelName to be an explicit nil
func (o *RokuAppRoku) SetRokuChannelNameNil() {
	o.RokuChannelName.Set(nil)
}

// UnsetRokuChannelName ensures that no value is present for RokuChannelName, not even an explicit nil
func (o *RokuAppRoku) UnsetRokuChannelName() {
	o.RokuChannelName.Unset()
}

func (o RokuAppRoku) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RokuAppRoku) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.RokuChannelId.IsSet() {
		toSerialize["roku_channel_id"] = o.RokuChannelId.Get()
	}
	if o.RokuChannelName.IsSet() {
		toSerialize["roku_channel_name"] = o.RokuChannelName.Get()
	}
	return toSerialize, nil
}

type NullableRokuAppRoku struct {
	value *RokuAppRoku
	isSet bool
}

func (v NullableRokuAppRoku) Get() *RokuAppRoku {
	return v.value
}

func (v *NullableRokuAppRoku) Set(val *RokuAppRoku) {
	v.value = val
	v.isSet = true
}

func (v NullableRokuAppRoku) IsSet() bool {
	return v.isSet
}

func (v *NullableRokuAppRoku) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRokuAppRoku(val *RokuAppRoku) *NullableRokuAppRoku {
	return &NullableRokuAppRoku{value: val, isSet: true}
}

func (v NullableRokuAppRoku) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRokuAppRoku) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


