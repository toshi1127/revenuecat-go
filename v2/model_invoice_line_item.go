/*
Developer API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the InvoiceLineItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InvoiceLineItem{}

// InvoiceLineItem struct for InvoiceLineItem
type InvoiceLineItem struct {
	// String representing the object's type. Objects of the same type share the same value.
	Object string `json:"object"`
	// The product identifier
	ProductIdentifier string `json:"product_identifier"`
	// The display name of the product
	ProductDisplayName NullableString `json:"product_display_name"`
	// The duration of the subscription in ISO-8601 standard
	ProductDuration NullableString `json:"product_duration" validate:"regexp=^(-?)P(?=\\\\d|T\\\\d)(?:(\\\\d+)Y)?(?:(\\\\d+)M)?(?:(\\\\d+)([DW]))?(?:T(?:(\\\\d+)H)?(?:(\\\\d+)M)?(?:(\\\\d+(?:\\\\.\\\\d+)?)S)?)?$"`
	// Total purchased items
	Quantity int32 `json:"quantity"`
	UnitAmount MonetaryAmount `json:"unit_amount"`
}

type _InvoiceLineItem InvoiceLineItem

// NewInvoiceLineItem instantiates a new InvoiceLineItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoiceLineItem(object string, productIdentifier string, productDisplayName NullableString, productDuration NullableString, quantity int32, unitAmount MonetaryAmount) *InvoiceLineItem {
	this := InvoiceLineItem{}
	this.Object = object
	this.ProductIdentifier = productIdentifier
	this.ProductDisplayName = productDisplayName
	this.ProductDuration = productDuration
	this.Quantity = quantity
	this.UnitAmount = unitAmount
	return &this
}

// NewInvoiceLineItemWithDefaults instantiates a new InvoiceLineItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoiceLineItemWithDefaults() *InvoiceLineItem {
	this := InvoiceLineItem{}
	return &this
}

// GetObject returns the Object field value
func (o *InvoiceLineItem) GetObject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Object
}

// GetObjectOk returns a tuple with the Object field value
// and a boolean to check if the value has been set.
func (o *InvoiceLineItem) GetObjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Object, true
}

// SetObject sets field value
func (o *InvoiceLineItem) SetObject(v string) {
	o.Object = v
}

// GetProductIdentifier returns the ProductIdentifier field value
func (o *InvoiceLineItem) GetProductIdentifier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProductIdentifier
}

// GetProductIdentifierOk returns a tuple with the ProductIdentifier field value
// and a boolean to check if the value has been set.
func (o *InvoiceLineItem) GetProductIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductIdentifier, true
}

// SetProductIdentifier sets field value
func (o *InvoiceLineItem) SetProductIdentifier(v string) {
	o.ProductIdentifier = v
}

// GetProductDisplayName returns the ProductDisplayName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *InvoiceLineItem) GetProductDisplayName() string {
	if o == nil || o.ProductDisplayName.Get() == nil {
		var ret string
		return ret
	}

	return *o.ProductDisplayName.Get()
}

// GetProductDisplayNameOk returns a tuple with the ProductDisplayName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceLineItem) GetProductDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductDisplayName.Get(), o.ProductDisplayName.IsSet()
}

// SetProductDisplayName sets field value
func (o *InvoiceLineItem) SetProductDisplayName(v string) {
	o.ProductDisplayName.Set(&v)
}

// GetProductDuration returns the ProductDuration field value
// If the value is explicit nil, the zero value for string will be returned
func (o *InvoiceLineItem) GetProductDuration() string {
	if o == nil || o.ProductDuration.Get() == nil {
		var ret string
		return ret
	}

	return *o.ProductDuration.Get()
}

// GetProductDurationOk returns a tuple with the ProductDuration field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceLineItem) GetProductDurationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductDuration.Get(), o.ProductDuration.IsSet()
}

// SetProductDuration sets field value
func (o *InvoiceLineItem) SetProductDuration(v string) {
	o.ProductDuration.Set(&v)
}

// GetQuantity returns the Quantity field value
func (o *InvoiceLineItem) GetQuantity() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value
// and a boolean to check if the value has been set.
func (o *InvoiceLineItem) GetQuantityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Quantity, true
}

// SetQuantity sets field value
func (o *InvoiceLineItem) SetQuantity(v int32) {
	o.Quantity = v
}

// GetUnitAmount returns the UnitAmount field value
func (o *InvoiceLineItem) GetUnitAmount() MonetaryAmount {
	if o == nil {
		var ret MonetaryAmount
		return ret
	}

	return o.UnitAmount
}

// GetUnitAmountOk returns a tuple with the UnitAmount field value
// and a boolean to check if the value has been set.
func (o *InvoiceLineItem) GetUnitAmountOk() (*MonetaryAmount, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UnitAmount, true
}

// SetUnitAmount sets field value
func (o *InvoiceLineItem) SetUnitAmount(v MonetaryAmount) {
	o.UnitAmount = v
}

func (o InvoiceLineItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InvoiceLineItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["object"] = o.Object
	toSerialize["product_identifier"] = o.ProductIdentifier
	toSerialize["product_display_name"] = o.ProductDisplayName.Get()
	toSerialize["product_duration"] = o.ProductDuration.Get()
	toSerialize["quantity"] = o.Quantity
	toSerialize["unit_amount"] = o.UnitAmount
	return toSerialize, nil
}

func (o *InvoiceLineItem) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"object",
		"product_identifier",
		"product_display_name",
		"product_duration",
		"quantity",
		"unit_amount",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varInvoiceLineItem := _InvoiceLineItem{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varInvoiceLineItem)

	if err != nil {
		return err
	}

	*o = InvoiceLineItem(varInvoiceLineItem)

	return err
}

type NullableInvoiceLineItem struct {
	value *InvoiceLineItem
	isSet bool
}

func (v NullableInvoiceLineItem) Get() *InvoiceLineItem {
	return v.value
}

func (v *NullableInvoiceLineItem) Set(val *InvoiceLineItem) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoiceLineItem) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoiceLineItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoiceLineItem(val *InvoiceLineItem) *NullableInvoiceLineItem {
	return &NullableInvoiceLineItem{value: val, isSet: true}
}

func (v NullableInvoiceLineItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoiceLineItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


