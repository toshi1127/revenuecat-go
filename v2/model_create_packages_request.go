/*
Developer API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreatePackagesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreatePackagesRequest{}

// CreatePackagesRequest struct for CreatePackagesRequest
type CreatePackagesRequest struct {
	// The lookup_key of the package
	LookupKey string `json:"lookup_key"`
	// The display name of the package
	DisplayName string `json:"display_name"`
	// The position of the package in the offering
	Position *int32 `json:"position,omitempty"`
}

type _CreatePackagesRequest CreatePackagesRequest

// NewCreatePackagesRequest instantiates a new CreatePackagesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreatePackagesRequest(lookupKey string, displayName string) *CreatePackagesRequest {
	this := CreatePackagesRequest{}
	this.LookupKey = lookupKey
	this.DisplayName = displayName
	return &this
}

// NewCreatePackagesRequestWithDefaults instantiates a new CreatePackagesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreatePackagesRequestWithDefaults() *CreatePackagesRequest {
	this := CreatePackagesRequest{}
	return &this
}

// GetLookupKey returns the LookupKey field value
func (o *CreatePackagesRequest) GetLookupKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LookupKey
}

// GetLookupKeyOk returns a tuple with the LookupKey field value
// and a boolean to check if the value has been set.
func (o *CreatePackagesRequest) GetLookupKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LookupKey, true
}

// SetLookupKey sets field value
func (o *CreatePackagesRequest) SetLookupKey(v string) {
	o.LookupKey = v
}

// GetDisplayName returns the DisplayName field value
func (o *CreatePackagesRequest) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *CreatePackagesRequest) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *CreatePackagesRequest) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetPosition returns the Position field value if set, zero value otherwise.
func (o *CreatePackagesRequest) GetPosition() int32 {
	if o == nil || IsNil(o.Position) {
		var ret int32
		return ret
	}
	return *o.Position
}

// GetPositionOk returns a tuple with the Position field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePackagesRequest) GetPositionOk() (*int32, bool) {
	if o == nil || IsNil(o.Position) {
		return nil, false
	}
	return o.Position, true
}

// HasPosition returns a boolean if a field has been set.
func (o *CreatePackagesRequest) HasPosition() bool {
	if o != nil && !IsNil(o.Position) {
		return true
	}

	return false
}

// SetPosition gets a reference to the given int32 and assigns it to the Position field.
func (o *CreatePackagesRequest) SetPosition(v int32) {
	o.Position = &v
}

func (o CreatePackagesRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreatePackagesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["lookup_key"] = o.LookupKey
	toSerialize["display_name"] = o.DisplayName
	if !IsNil(o.Position) {
		toSerialize["position"] = o.Position
	}
	return toSerialize, nil
}

func (o *CreatePackagesRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"lookup_key",
		"display_name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreatePackagesRequest := _CreatePackagesRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreatePackagesRequest)

	if err != nil {
		return err
	}

	*o = CreatePackagesRequest(varCreatePackagesRequest)

	return err
}

type NullableCreatePackagesRequest struct {
	value *CreatePackagesRequest
	isSet bool
}

func (v NullableCreatePackagesRequest) Get() *CreatePackagesRequest {
	return v.value
}

func (v *NullableCreatePackagesRequest) Set(val *CreatePackagesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreatePackagesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreatePackagesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreatePackagesRequest(val *CreatePackagesRequest) *NullableCreatePackagesRequest {
	return &NullableCreatePackagesRequest{value: val, isSet: true}
}

func (v NullableCreatePackagesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreatePackagesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


